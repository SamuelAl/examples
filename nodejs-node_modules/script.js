const { Queue } = require('@datastructures-js/queue');
const { PriorityQueue } = require('@datastructures-js/priority-queue');

const queue = new Queue();
const priorityQueue = new PriorityQueue((a, b) => a - b);

process.stdin.resume();
process.stdin.setEncoding('utf-8');
process.stdin.once('data', function (data) {
  process.stdin.pause();

  const numbers = data.trim().split(/\s+/).map(Number).filter(n => !isNaN(n));

  numbers.forEach(num => {
    console.log(num);
    queue.enqueue(num);
    priorityQueue.enqueue(num);
  });

  console.log("\nRegular Queue:");
  while (!queue.isEmpty()) {
    console.log(queue.dequeue());
  }

  console.log("\nPriority Queue:");
  while (!priorityQueue.isEmpty()) {
    console.log(priorityQueue.dequeue());
  }
});
